# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-20 18:11
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Customer Name')),
                ('utility_id', models.CharField(max_length=100, unique=True, verbose_name='Customer Utility ID')),
                ('contact_name', models.CharField(blank=True, max_length=100, verbose_name='Contact Name')),
                ('phone_number', models.CharField(max_length=10, null=True, verbose_name='Phone Number')),
            ],
        ),
        migrations.CreateModel(
            name='DREvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_notification_time', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled Notification Time')),
                ('start', models.DateTimeField(verbose_name='Event Start')),
                ('end', models.DateTimeField(verbose_name='Event End')),
                ('modification_number', models.IntegerField(default=0, verbose_name='Modification Number')),
                ('status', models.CharField(choices=[('SCHEDULED', 'SCHEDULED'), ('NOTIFICATION_SENT', 'NOTIFICATION'), ('ACTIVE', 'ACTIVE'), ('COMPLETED', 'COMPLETED'), ('REPORTED', 'REPORTED'), ('CANCELED', 'CANCELED'), ('ERROR', 'ERROR')], default='SCHEDULED', max_length=100, verbose_name='Event Status')),
                ('last_status_time', models.DateTimeField(default=datetime.datetime(2017, 10, 20, 18, 11, 24, 833036, tzinfo=utc), verbose_name='Last Status Time')),
            ],
        ),
        migrations.CreateModel(
            name='DRProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Program Name')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100, verbose_name='Site Name')),
                ('site_id', models.CharField(max_length=100, verbose_name='Site ID')),
                ('site_location_code', models.CharField(max_length=100, verbose_name='Site Location Code')),
                ('ip_address', models.CharField(max_length=100, verbose_name='IPV6 address')),
                ('site_address1', models.CharField(max_length=100, verbose_name='Site Address Line 1')),
                ('site_address2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Site Address Line 2')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=2, verbose_name='State (abbr.)')),
                ('zip', models.CharField(max_length=5, verbose_name='Zip')),
                ('contact_name', models.CharField(max_length=100, verbose_name='Contact Name')),
                ('phone_number', models.CharField(max_length=10, verbose_name='Phone Number')),
                ('online', models.BooleanField(default=False)),
                ('reporting_status', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vtn.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='SiteEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('SCHEDULED', 'SCHEDULED'), ('NOTIFICATION_SENT', 'NOTIFICATION'), ('ACTIVE', 'ACTIVE'), ('COMPLETED', 'COMPLETED'), ('REPORTED', 'REPORTED'), ('CANCELED', 'CANCELED'), ('ERROR', 'ERROR')], default='SCHEDULED', max_length=100)),
                ('notification_time', models.DateTimeField(blank=True, null=True, verbose_name='Notification Time')),
                ('last_status_time', models.DateTimeField(default=datetime.datetime(2017, 10, 20, 18, 11, 24, 833888, tzinfo=utc), verbose_name='Last Status Time')),
                ('opt_in', models.BooleanField(default=False)),
                ('last_opt_in', models.DateTimeField(default=datetime.datetime(2017, 10, 20, 18, 11, 24, 833931, tzinfo=utc), verbose_name='Last opt-in')),
                ('dr_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vtn.DREvent')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vtn.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Telemetry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True)),
                ('reported_on', models.DateTimeField(blank=True, null=True)),
                ('baseline_power_kw', models.FloatField(blank=True, null=True, verbose_name='Baseline Power (kw)')),
                ('measured_power_kw', models.FloatField(blank=True, null=True, verbose_name='Measured Power (kw)')),
                ('baseline_energy_kwh', models.FloatField(blank=True, null=True, verbose_name='Baseline Energy (kwh)')),
                ('measured_energy_kwh', models.FloatField(blank=True, null=True, verbose_name='Measured Energy (kwh)')),
                ('energy_kwh', models.FloatField(null=True)),
                ('baseline_kW', models.FloatField(null=True, verbose_name='Baseline (kW)')),
                ('actual_kW', models.FloatField(null=True, verbose_name='Actual (kW)')),
                ('shed_kW', models.FloatField(null=True, verbose_name='Actual (kW)')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vtn.Site')),
            ],
        ),
        migrations.AddField(
            model_name='drprogram',
            name='sites',
            field=models.ManyToManyField(blank=True, to='vtn.Site'),
        ),
        migrations.AddField(
            model_name='drevent',
            name='dr_program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vtn.DRProgram'),
        ),
        migrations.AddField(
            model_name='drevent',
            name='sites',
            field=models.ManyToManyField(related_name='Sites1', through='vtn.SiteEvent', to='vtn.Site'),
        ),
    ]
